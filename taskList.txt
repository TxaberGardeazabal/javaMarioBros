add new functionalities:
- add rotation gizmo
- find how to load spritesheets automaticaly instead of hardcoding all of them (maybe in the assetpool).
- make adding, changing and removing of spritesheets in gameobjects
- in level scenes only assets that are used should be loaded.
- create a prebuilt new level
- open the saveAs window when playing a new level (playing auto saves)
add above cloud zones
show contents of assetpool in editor (database)
create in settings multi button input variables (control + x...)
+ make mario movements into separate functions and
+ make an computer playercontroller that controlls mario during cutscenes (where the player is not in control)
+ create transition animations for non sprite based animations (mario, blockCoin) (transition system?)


upgrade existing functionalities:
-- style properties window
-- add all controlls in settings class and use those
- refractor
- add boxcollider to enemies and items (for optimization)
- on savemenus show file name in selector
make prefabs of ui elements
+ blocks hit by moving shells should drop contents
+ make physics them more precise and less janky
refactor component so it handles object types (could hace a class impementation)
adjust the screen size so is 1:1 with the original game
++ finish the levelController
add prefabs in assetpool??

bugfixing:
- picking shader doesn't prevent extra placement of gameobjects if the object color is too light
some window focus issues:
   gizmos break when being pulled out of viewport
   when pressing away while jdialog windows are active causes focus bugs and crashes
   imgui windows clipping into screen bar and headers not showing correctly
imgui string editing sucks
+ enemies should spawn only as soon as the camera reaches them
+ collisions are janky, disabling contacts in presolve doesn't prevent unwanted collisions

other:
// make pillbox changes ep #58
// make it possible to render fonts from ttf files (discontinued)
// migrate project to gradle (if jars don't work)
// refactor mouseControlls class, including child object interactions, colors and the annoying gizmos